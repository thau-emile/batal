@startuml

Class Simulateur{
+ {static} main(String[] args) : void
}

Class Controleur{
+ controle(Bateau bateau) : void
}

Class Bateau{
- {static} int nombreDeBateauxConstruits
- final String nom
- double milesParcourus

+ Bateau(String nom)
+ Bateau(String nom, int ptDeVieMaxCoque)
+ prendLaMer() : void
+ navigue(double miles) : void
+ arriveAuPort() : void
}

Class BateauCivil{
- int nbCivils;

+ BateauCivil(String nom)
+ BateauCivil(String nom, int ptDeVieMaxCoque)
+ getNbCivils() : int
+ setNbCivils(int nbCivils) : void
+ arriveAuPort() : void
+ navigue(double miles) : void
+ prendLaMer() : void
+ prendLaMer(int nbCivilsEmbarques) : void
}

Class BateauMilitaire{
}

interface Cargo{
+ {abstract} chargeTonnage(int tonnage) : void
+ {abstract} dechargeTonnage() : int
}

interface Submersible{
+ {abstract} plonge() : void
+ {abstract} faitSurface() : void
}

Class PorteContainer{
}

Class Ravitailleur{
}

Class SousMarinAttaque{
}

Class SousMarinRavitailleur{
}

Class Coque{
}

Class Moteur{
}

Simulateur --> Bateau

Controleur --> Bateau

Bateau *--> "1,1" Coque
Bateau *--> "1,1" Moteur : WIP

Bateau <|-- BateauCivil

Bateau <|-- BateauMilitaire

BateauCivil <|-- PorteContainer
Cargo <|.. PorteContainer

BateauMilitaire <|-- Ravitailleur
Cargo <|.. Ravitailleur

BateauMilitaire <|-- SousMarinAttaque
Submersible <|.. SousMarinAttaque

BateauMilitaire <|-- SousMarinRavitailleur
Cargo <|.. SousMarinRavitailleur
Submersible <|.. SousMarinRavitailleur

@enduml
